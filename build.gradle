/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_groovy_projects.html
 */
plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

version = '0.1.0-SNAPSHOT'
group = 'se.alipsa'

java {
    //withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    //jcenter()
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    compile 'org.codehaus.groovy:groovy-all:3.0.7' // Neither implementation or api works

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.0'

    implementation group: 'org.apache.sshd', name: 'sshd-core', version: '2.6.0'
    implementation group: 'org.apache.sshd', name: 'sshd-scp', version: '2.6.0'

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3'

    implementation 'com.github.javakeyring:java-keyring:1.0.1'

    // Test dependencies
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.1'
}

test {
    useJUnitPlatform()
    testLogging {
        // Make sure output from standard out or error is shown in Gradle output.
        showStandardStreams = true
    }
}


groovydoc {
    use = true
    groovyClasspath = configurations.compile // http://issues.gradle.org/browse/GRADLE-1391
}

task groovydocJar(type: Jar, dependsOn: groovydoc ) {
    classifier 'javadoc'
    from groovydoc.destinationDir
}

ext.admin = hasProperty('ossrhUsername')


publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact(groovydocJar) {
                classifier = 'javadoc'
            }

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = "${project.name}"

                description = "Project deployment for developers"
                url = "https://github.com/perNyfelt/ProjectDeployer"

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/perNyfelt/ProjectDeployer/main/LICENSE'
                    }
                }

                scm {
                    connection = 'https://github.com/perNyfelt/ProjectDeployer.git'
                    developerConnection = 'git@github.com:perNyfelt/ProjectDeployer.git'
                    url = 'https://github.com/perNyfelt/ProjectDeployer/tree/main'
                }

                developers {
                    developer {
                        id = 'pernyf'
                        name = 'Per Nyfelt'
                        email = 'per@alipsa.se'
                    }
                }
            }
        }
    }

    repositories {
        /*
        maven {
            name = "ossrh"
            credentials(PasswordCredentials)
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
         */
        maven {
            name = "localNexus"
            credentials(PasswordCredentials)
            url = "http://localhost:8081/repository/snapshots/"
        }
    }
}

signing {
    required { admin }
    sign publishing.publications.maven
}